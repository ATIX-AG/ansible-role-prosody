---
- name: Ensure apt-key is available
  apt:
    pkg: "{{ item }}"
  with_items:
    - apt
    - ca-certificates

- name: Ensure repository key for Prosody is in place
  apt_key:
    url: https://prosody.im/files/prosody-debian-packages.key
    state: present

- name: Add Prosody repository
  apt_repository:
    repo: 'deb http://packages.prosody.im/debian {{ ansible_distribution_release }} main'
    update_cache: yes

- name: Ensure required packages are present
  apt:
    pkg: "{{ item }}"
  with_items:
    - prosody
    - mercurial
    - lua-bitop
    - lua-event
    # compression disabled by default
    # - lua-zlib

- name: Override init script (https://prosody.im/issues/issue/466)
  copy:
    src: prosody.init
    dest: /etc/init.d/prosody

- name: Get latest registration theme
  git:
    repo: "{{ prosody_custom_registration_theme_repo }}"
    dest: "{{ prosody_custom_registration_theme_path }}"
  when: prosody_custom_registration_theme

- name: Configure Prosody
  template:
    src: prosody.cfg.lua.j2
    dest: /etc/prosody/prosody.cfg.lua
    owner: root
    group: prosody
    mode: 0640
  notify: reload prosody config

# - name: Create Prosody accounts
#   command: prosodyctl register {{ item.name }} {{ prosody_virtual_domain }} {{ item.password }}
#   with_items: prosody_accounts

- name: Get latest prosody modules
  hg:
    repo: https://hg.prosody.im/prosody-modules/
    dest: "{{ prosody_external_modules_dir }}"

- name: Create directory mod_motd_once
  file:
    path: "{{ prosody_external_modules_dir }}/mod_motd_once"
    owner: root
    group: root
    mode: 0755
    state: directory

- name: Copy working mod_motd_once
  copy:
    src: mod_motd_once.lua
    dest: "{{ prosody_external_modules_dir }}/mod_motd_once/mod_motd_once.lua"
    owner: root
    group: root
    mode: 0644

- name: Enable external modules
  file:
    src: "{{ prosody_external_modules_dir }}/mod_{{ item }}/mod_{{ item }}.lua"
    dest: "/usr/lib/prosody/modules/mod_{{ item }}.lua"
    state: link
  with_items: "{{ prosody_external_modules }}"
  notify: reload prosody config

- name: Get mod_register_web templates
  file:
    src: "{{ prosody_external_modules_dir }}/mod_register_web/templates"
    dest: /usr/lib/prosody/modules/templates
    state: link

- name: Push TLS cert to /etc/prosody/certs/
  copy:
    content: "{{ prosody_ssl_cert }}"
    dest: /etc/prosody/certs/jabber.pem
    owner: root
    group: prosody
    mode: 0640
  when: prosody_ssl_cert is defined
  tags:
    - certs-jabber
  notify: reload prosody config

- name: Push TLS key to /etc/prosody/certs/
  copy:
    content: "{{ prosody_ssl_key }}"
    dest: /etc/prosody/certs/jabber.key
    owner: root
    group: prosody
    mode: 0640
  when: prosody_ssl_key is defined
  tags:
    - certs-jabber
  notify: reload prosody config

- name: Create parameters for Diffieâ€“Hellman (could take a while)
  command: "openssl dhparam -out /etc/prosody/certs/dh-{{ prosody_dhparam_length }}.pem {{ prosody_dhparam_length }}"
  args:
    creates: /etc/prosody/certs/dh-{{ prosody_dhparam_length }}.pem
  notify: restart prosody

- name: Push proxy TLS cert to /etc/prosody/certs/
  copy:
    content: "{{ prosody_proxy_ssl_cert }}"
    dest: /etc/prosody/certs/proxy.pem
    owner: root
    group: prosody
    mode: 0640
  when: prosody_proxy_ssl_cert is defined
  tags:
    - certs-jabber
  notify: reload prosody config

- name: Push proxy TLS key to /etc/prosody/certs/
  copy:
    content: "{{ prosody_proxy_ssl_key }}"
    dest: /etc/prosody/certs/proxy.key
    owner: root
    group: prosody
    mode: 0640
  when: prosody_proxy_ssl_key is defined
  tags:
    - certs-jabber
  notify: reload prosody config

- name: Enable prosody service
  service:
    name: prosody
    enabled: yes
